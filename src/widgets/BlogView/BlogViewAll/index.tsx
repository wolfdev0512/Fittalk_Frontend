import React from "react";
// component
import { Row } from "components/Layout";
import { Text } from "components/Text";
import { Hidden } from "components/Hidden";
import { SliderOptions, useSlider } from "components/Slider";
// feature
import { BlogItem } from "widgets/BlogItem";
// types

import { BlogViewItemProps } from "components/Card";
import { BlogItemInterface } from "types/model/blog/interface";

// styled component
import {
	BlogTitleView,
	SliderWrapper,
	BlogViewItemWrapper,
} from "../BlogView.style";
import { BREAKPOINTS } from "theme/base";
// ----------------------------------------------------
// component generated by hoc
const { md, lg } = BREAKPOINTS;

const options: SliderOptions = {
	speed: 600,
	slidesPerView: "auto",
	freeMode: true,
};

const BlogViewSlider = useSlider<BlogItemInterface>(
	BlogItem,
	options,
	SliderWrapper
);

const BlogView: React.FC<BlogViewItemProps> = ({
	category,
	categoryData,
	loading,
}) => {
	return (
		<BlogViewItemWrapper>
			<Row
				justifyContent="space-between"
				alignItems="center"
				padding="0 0 21px 0"
			>
				<BlogTitleView>
					<Text textTransform="uppercase" fontSize={15} fontWeight={900}>
						{category}
					</Text>
				</BlogTitleView>
			</Row>
			<Hidden wHide={[md]}>
				<Row
					display="grid"
					templateCol="1fr 1fr 1fr"
					gap="30px 0px"
					responsive={{
						[lg]: { templateCol: "repeat( auto-fit, minmax(310px, 1fr))" },
					}}
				>
					{categoryData.map((item, index) => (
						<BlogItem {...item} key={`blogItem_${index}`} loading={loading} />
					))}
				</Row>
			</Hidden>
			<Hidden wShow={[md]}>
				<BlogViewSlider
					sliderData={categoryData}
					itemOptions={{ badgeColor: "primary.regular", loading }}
				/>
			</Hidden>
		</BlogViewItemWrapper>
	);
};

export default BlogView;
