import React from "react";
// component
import { Row } from "components/Layout";
import { Text } from "components/Text";
import { Hidden } from "components/Hidden";
import { SliderOptions, useSlider } from "components/Slider";

// hook
import { useRouter } from "hooks";
import useBlog from "hooks/useBlog";
// types
import { BlogItemInterface } from "types/model/blog/interface";
// view
import { BlogItem } from "widgets/BlogItem";
// styled component
import {
	FitTalkWrapper,
	SliderWrapper,
	SliderContainer,
} from "./FitTalk.style";
import { Button } from "components/Button";

// ----------------------------------------------------
const options: SliderOptions = {
	speed: 600,
	slidesPerView: "auto",
	freeMode: true,
	pagination: {
		clickable: true,
		dynamicBullets: true,
		// eslint-disable-next-line @typescript-eslint/no-unused-vars
		renderBullet: (_, className) => {
			return '<span class="bulletContainer ' + className + '"> </span>';
		},
	},
};

// component generated by hoc
const BlogViewSlider = useSlider<BlogItemInterface>(
	BlogItem,
	options,
	SliderWrapper
);

const FitTalkView = () => {
	const { router } = useRouter();
	const { fetchBlogsByTag } = useBlog();

	const blogs = fetchBlogsByTag();

	return (
		<FitTalkWrapper>
			<Text
				textTransform="uppercase"
				fontSize={15}
				className="fittalk_header"
				fontWeight={900}
			>
				More Fit Talk
			</Text>
			<SliderContainer>
				<BlogViewSlider
					sliderData={blogs}
					itemOptions={{ badgeColor: "primary.regular" }}
				/>
			</SliderContainer>
			<Hidden wHide={[425]}>
				<Row justifyContent="center" padding="45px 0 0 0">
					<Button as="a" href={`/${router.query.tag?.toString()}`}>
						View More
					</Button>
				</Row>
			</Hidden>
		</FitTalkWrapper>
	);
};

const MemorizedFitTalkView = React.memo(FitTalkView);
export default MemorizedFitTalkView;
